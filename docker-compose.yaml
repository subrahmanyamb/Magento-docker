version: "3"
services:
  varnish:
    build:
      context: ./docker/varnish
    volumes:
      - ./docker/varnish/conf.d:/etc/varnish/conf.d:rw,cached
    depends_on:
      - nginx
    env_file:
      - .env
    ports:
      - "81:6081"
      - "6085:6085"
    environment:
      BACKENDS: "anon auth download"
      BACKENDS_PORT: "81"
      DNS_ENABLED: "true"
      BACKENDS_PROBE_INTERVAL: "3s"
      BACKENDS_PROBE_TIMEOUT: "1s"
      BACKENDS_PROBE_WINDOW: "3"
      BACKENDS_PROBE_THRESHOLD: "2"
      DASHBOARD_USER: "admin"
      DASHBOARD_PASSWORD: "admin"
      DASHBOARD_SERVERS: "varnish"
      DASHBOARD_DNS_ENABLED: "true"
  app:
    build:
      context: ./docker/application
      args:
        - timezone=${AU}

    volumes:
      - ./application:/srv:rw,cached
      - app_log:/srv/var/log
      - ~/.composer/cache:/root/.composer/cache
    env_file:
      - .env
    environment:
      XDEBUG_CONFIG: remote_host=${XDEBUG_REMOTE_HOST}
      PHP_IDE_CONFIG: serverName=${NGINX_HOST}
      maildev_host: maildev
  mongodb:
    build:
      context: ./docker/mongodb
      args:
        - mongodb_username=${MONGODB_USERNAME}
        - mongodb_password=${MONGODB_PASSWORD}
        - mongodb_initdb_database=${MONGO_INITDB_DATABASE}
    volumes:

      - ./.data/mongo:/data/:rw
    env_file:
      - .env
    ports:
      - "27017:27017"

  nginx:
    build:
      context: ./docker/nginx
      args:
        - nginx_host=${NGINX_HOST}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    volumes:
      - ./application:/srv:rw,cached
      - ./docker/nginx/default.template:/etc/nginx/conf.d/default.template
      - nginx_log:/var/log/nginx
    env_file:
      - .env
    command: /bin/bash -c "envsubst '$$NGINX_HOST'
      < /etc/nginx/conf.d/default.template
      > /etc/nginx/conf.d/default.conf
      && exec nginx -g 'daemon off;'"
  db:
    image: mariadb:10.5
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
      - TERM=meh
    command:
      mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF --log_bin=ON

  redis:
    image: redis
  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "1025:1025"
      - "8025:8025"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g # Adjust memory settings as needed
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
volumes:
  app_log:
  nginx_log:
  mysql:
    driver: local
